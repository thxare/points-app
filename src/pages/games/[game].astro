---
import LayoutGame from "../../layouts/LayoutGame.astro";
import CardGame from "../../components/CardGame.astro";
import Button from "../../ui/Button.astro";

export async function getStaticPaths() {
  return [
    { params: { game: "pool" } },
    { params: { game: "monopoly" } },
    { params: { game: "catan" } },
    { params: { game: "gartic-phone" } },
  ];
}

const { game } = Astro.params;

const arr = [
  { path: "pool", name: "Pool" },
  { path: "monopoly", name: "Monopoly" },
  { path: "catan", name: "Catán" },
  { path: "gartic-phone", name: "Gartic Phone" },
];
const currentGame = arr.find((g) => g.path === game);
const playersArr = ["Thiare", "Loki", "vicente"];
---

<LayoutGame title="Partidas">
  <main>
    <h1><span class="text-gradient">{currentGame.name}</span></h1>
    <ul role="list" class="link-card-grid">
      <CardGame
        date="2024-10-06"
        winner="Ayleen"
        id={1234}
        players={playersArr}
      />
      <CardGame
        date="2024-10-06"
        winner="Ayleen"
        id={1234}
        players={playersArr}
      />
      <CardGame
        date="2024-10-06"
        winner="Ayleen"
        id={1234}
        players={playersArr}
      />
    </ul>
    <Button
      title="Agregar Nueva Partida"
      path=`/games/new-game/${currentGame.path}`
    />
    <Button title="Regresar a Inicio →" path="/" />
  </main>
</LayoutGame>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
